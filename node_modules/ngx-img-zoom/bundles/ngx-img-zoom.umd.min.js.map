{"version":3,"sources":["ng://ngx-img-zoom/lib/ngx-img-zoom.service.ts","ng://ngx-img-zoom/lib/ngx-img-zoom.component.ts","ng://ngx-img-zoom/lib/ngx-img-zoom.module.ts"],"names":["NgxImgZoomService","this","zoomMode","prototype","setZoomMode","Injectable","NgxImgZoomComponent","renderer","ngxZoomService","hide","_triggerAnimationIn","notFirstTime","showResult","Object","defineProperty","_imgStyle","val","_resultStyle","_lensStyle","imageZoom","onscroll","event","setStyle","lens","onclick","zoomImage","result","_this","previewImage","image","Image","src","onload","ngOnInit","ngAfterViewInit","img","imgElmRef","nativeElement","resultElmRef","container","containerElmRef","setAttribute","listen","createElement","addClass","insertBefore","parentElement","cx","offsetWidth","cy","offsetHeight","width","height","moveLens","bind","e","pos","x","y","preventDefault","getCursorPos","a","window","getBoundingClientRect","pageX","left","pageY","top","pageXOffset","pageYOffset","handleMouseLeave","Component","args","selector","template","Renderer2","ViewChild","Input","HostListener","NgxImgZoomModule","NgModule","imports","CommonModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgxImgZoomMode } from './mode.enum';\n\n@Injectable()\nexport class NgxImgZoomService {\n  zoomMode = NgxImgZoomMode.HoverZoom;\n\n  constructor() { }\n\n  setZoomMode(zoomMode) {\n    this.zoomMode = zoomMode;\n  }\n}\n","import { Component, OnInit, Renderer2, ElementRef, ViewChild, AfterViewInit, Input, HostListener } from '@angular/core';\nimport { NgxImgZoomService } from './ngx-img-zoom.service';\nimport { NgxImgZoomMode } from './mode.enum';\n@Component({\n  selector: 'ngx-img-zoom',\n  templateUrl: './ngx-img-zoom.component.html',\n  styleUrls: ['./ngx-img-zoom.component.css'],\n})\nexport class NgxImgZoomComponent implements OnInit, AfterViewInit {\n\n  img; lens; result; cx; cy; container;\n  hide = true;\n  _triggerAnimationIn = false;\n  notFirstTime = false;\n  showResult = false;\n  constructor(\n    private renderer: Renderer2,\n    private ngxZoomService: NgxImgZoomService\n    ) { }\n\n    zoomMode: NgxImgZoomMode = this.ngxZoomService.zoomMode;\n    @ViewChild('img') imgElmRef: ElementRef;\n    @ViewChild('result') resultElmRef: ElementRef;\n    @ViewChild('container') containerElmRef: ElementRef;\n\n\n    _imgStyle;\n    @Input() set imgStyle(val) {\n      this._imgStyle = val;\n    }\n    get imgStyle() {\n      return this._imgStyle;\n    }\n\n    _resultStyle;\n    @Input() set resultStyle(val) {\n      this._resultStyle = val;\n    }\n    get resultStyle() {\n      return this._resultStyle;\n    }\n\n    _lensStyle;\n    @Input() set lensStyle(val) {\n      this._lensStyle = val;\n      if (this.notFirstTime) {\n        this.imageZoom();\n      }\n    }\n    get lensStyle() {\n      return this._lensStyle;\n    }\n    @Input() containerStyle;\n    zoomImage;\n    previewImage;\n\n  @HostListener('window:scroll', ['$event']) onscroll(event) {\n    this.hide = true;\n    this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n  }\n  @HostListener('window:click', ['$event.target']) onclick(event) {\n    this.hide = true;\n    this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n  }\n\n  @Input('zoomImageSrc') set _imgSrc(val) {\n    this.zoomImage = val;\n    if (this.notFirstTime === true) {\n      this.renderer.setStyle(this.result, 'backgroundImage', \"url('\" + val + \"')\");\n    }\n    this.notFirstTime = true;\n    // this.renderer.setStyle(this.result, 'backgroundImage', val);\n  }\n\n  @Input('previewImageSrc') set _zoomImage(val) {\n    this.previewImage = val;\n    this.showResult = false;\n    const image = new Image();\n    image.src = this.zoomImage;\n    image.onload = () => {\n      this.showResult = true;\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.img = this.imgElmRef.nativeElement;\n    this.result = this.resultElmRef.nativeElement;\n    this.container = this.containerElmRef.nativeElement;\n\n    this.renderer.setAttribute(this.img, 'style', <string>this.imgStyle);\n    this.renderer.setAttribute(this.result, 'style', <string>this.resultStyle);\n    this.renderer.setAttribute(this.container, 'style', <string>this.containerStyle);\n    this.imageZoom();\n    this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n    this.renderer.listen(this.img, 'mouseout', () => {\n      this.hide = true;\n      this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n     });\n  }\n\n\n  imageZoom() {\n    /*create lens:*/\n    this.lens = this.renderer.createElement('DIV');\n    this.renderer.addClass(this.lens, 'img-zoom-lens');\n    this.renderer.setAttribute(this.lens, 'style', <string>this.lensStyle);\n\n    /*insert lens:*/\n    this.renderer.insertBefore(this.img.parentElement, this.lens, this.img);\n\n    /*calculate the ratio between result DIV and lens:*/\n    this.cx = this.result.offsetWidth / this.lens.offsetWidth;\n    this.cy = this.result.offsetHeight / this.lens.offsetHeight;\n\n    /*set background properties for the result DIV:*/\n    this.renderer.setStyle(this.result, 'backgroundImage', \"url('\" + this.zoomImage + \"')\");\n    this.renderer.setStyle(this.result, 'backgroundSize', (this.img.width * this.cx) + 'px ' + (this.img.height * this.cy) + 'px');\n    // this.renderer.setStyle(this.img.parentElement, 'position', 'relative')\n\n    /*execute a function when someone moves the cursor over the image, or the lens:*/\n    this.renderer.listen(this.lens, 'mousemove', this.moveLens.bind(this));\n    this.renderer.listen(this.img, 'mousemove', this.moveLens.bind(this));\n\n    /*and also for touch screens:*/\n    this.renderer.listen(this.img, 'touchmove', this.moveLens.bind(this));\n    this.renderer.listen(this.lens, 'touchmove', this.moveLens.bind(this));\n  }\n\n  moveLens(e) {\n      let pos, x, y;\n      /*prevent any other actions that may occur when moving over the image:*/\n      e.preventDefault();\n      /*get the cursor's x and y positions:*/\n      pos = this.getCursorPos(e);\n      /*calculate the position of the lens:*/\n      x = pos.x - (this.lens.offsetWidth / 2);\n      y = pos.y - (this.lens.offsetHeight / 2);\n\n\n      /*prevent the lens from being positioned outside the image:*/\n      if (x > this.img.width - this.lens.offsetWidth) {\n        x = this.img.width - this.lens.offsetWidth;\n\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      } else {\n        this.hide = false;\n        if (this.showResult) {\n          this.renderer.setStyle(this.lens, 'visibility', 'visible');\n        }\n      }\n\n      if (x < 0) {\n        x = 0;\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      }\n\n      if (y > this.img.height - this.lens.offsetHeight) {\n        y = this.img.height - this.lens.offsetHeight;\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      }\n\n      if (y < 0) {\n        y = 0;\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      }\n\n      /*set the position of the lens:*/\n      this.renderer.setStyle(this.lens, 'left', x + 'px');\n      this.renderer.setStyle(this.lens, 'top', y + 'px');\n      /*display what the lens 'sees':*/\n      this.renderer.setStyle(this.result, 'backgroundPosition', '-' + (x * this.cx) + 'px -' + (y * this.cy) + 'px');\n    }\n\n  getCursorPos(e) {\n      let a, x = 0, y = 0;\n      e = e || window.event;\n      /*get the x and y positions of the image:*/\n      a = this.img.getBoundingClientRect();\n      /*calculate the cursor's x and y coordinates, relative to the image:*/\n      x = e.pageX - a.left;\n      y = e.pageY - a.top;\n      /*consider any page scrolling:*/\n      x = x - window.pageXOffset;\n      y = y - window.pageYOffset;\n      return {x : x, y : y};\n  }\n\n  handleMouseLeave() {\n    this.hide = true;\n    this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImgZoomComponent } from './ngx-img-zoom.component';\nimport { CommonModule } from '@angular/common';\nimport { NgxImgZoomService } from './ngx-img-zoom.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [NgxImgZoomService],\n  declarations: [NgxImgZoomComponent],\n  exports: [NgxImgZoomComponent]\n})\nexport class NgxImgZoomModule { }\n"]}